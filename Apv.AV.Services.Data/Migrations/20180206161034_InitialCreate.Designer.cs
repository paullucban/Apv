// <auto-generated />
using Apv.AV.Services.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Apv.AV.Services.Data.Migrations
{
    [DbContext(typeof(ApvAppContext))]
    [Migration("20180206161034_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Apv.AV.Services.Data.Models.FC.AppVersion", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("createdBy");

                    b.Property<DateTime>("createdDt");

                    b.Property<string>("downloadUrl");

                    b.Property<string>("features");

                    b.Property<bool>("forceUpgrade");

                    b.Property<string>("lastUpdatedBy");

                    b.Property<DateTime>("lastUpdatedDt");

                    b.Property<decimal>("newVersionCode");

                    b.Property<string>("platform");

                    b.Property<decimal>("prevVersionCode");

                    b.HasKey("id");

                    b.ToTable("Versions");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.FC.CarModel", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("carModelClassid");

                    b.Property<string>("carModelId");

                    b.Property<string>("coverImage");

                    b.Property<string>("createdBy");

                    b.Property<DateTime>("createdDt");

                    b.Property<string>("lastUpdatedBy");

                    b.Property<DateTime>("lastUpdatedDt");

                    b.Property<string>("modelLabel");

                    b.Property<string>("modelLabelLoc");

                    b.Property<decimal>("order");

                    b.Property<bool>("published");

                    b.HasKey("id");

                    b.HasIndex("carModelClassid");

                    b.ToTable("CarModels");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.FC.CarModelClass", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("companyId");

                    b.Property<string>("countryCode");

                    b.Property<string>("createdBy");

                    b.Property<DateTime>("createdDt");

                    b.Property<string>("lastUpdatedBy");

                    b.Property<DateTime>("lastUpdatedDt");

                    b.Property<string>("modelClassBrand");

                    b.Property<string>("modelClassCode");

                    b.Property<string>("modelClassId");

                    b.Property<string>("modelClassLabel");

                    b.Property<string>("modelClassLabelLoc");

                    b.Property<string>("modelClassTypeLabel");

                    b.Property<string>("modelClassTypeLabelLoc");

                    b.Property<decimal>("order");

                    b.Property<bool>("published");

                    b.HasKey("id");

                    b.ToTable("CarModelClasses");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.FC.CarModelClassImage", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CarModelClassid");

                    b.Property<string>("coverImage");

                    b.Property<string>("createdBy");

                    b.Property<DateTime>("createdDt");

                    b.Property<string>("lastUpdatedBy");

                    b.Property<DateTime>("lastUpdatedDt");

                    b.Property<string>("onlineImage");

                    b.Property<string>("thumbnailImage");

                    b.Property<string>("verticalImage");

                    b.HasKey("id");

                    b.HasIndex("CarModelClassid");

                    b.ToTable("CarModelClassImage");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.FC.CarModelFinancialProduct", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CarModelid");

                    b.Property<string>("createdBy");

                    b.Property<DateTime>("createdDt");

                    b.Property<int?>("financialProductid");

                    b.Property<string>("lastUpdatedBy");

                    b.Property<DateTime>("lastUpdatedDt");

                    b.HasKey("id");

                    b.HasIndex("CarModelid");

                    b.HasIndex("financialProductid");

                    b.ToTable("CarModelFinancialProduct");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.FC.CarPrice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CarModelid");

                    b.Property<string>("companyId");

                    b.Property<string>("createdBy");

                    b.Property<DateTime>("createdDt");

                    b.Property<string>("lastUpdatedBy");

                    b.Property<DateTime>("lastUpdatedDt");

                    b.Property<decimal>("price");

                    b.HasKey("id");

                    b.HasIndex("CarModelid");

                    b.ToTable("CarPrice");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.FC.FinancialProduct", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("createdBy");

                    b.Property<DateTime>("createdDt");

                    b.Property<string>("description");

                    b.Property<string>("lastUpdatedBy");

                    b.Property<DateTime>("lastUpdatedDt");

                    b.Property<string>("name");

                    b.HasKey("id");

                    b.ToTable("FinancialProducts");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.Shared.Company", b =>
                {
                    b.Property<string>("companyId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10);

                    b.Property<string>("companyCode")
                        .HasMaxLength(10);

                    b.Property<string>("companyLogo")
                        .HasMaxLength(500);

                    b.Property<string>("companyName")
                        .HasMaxLength(500);

                    b.Property<string>("companyNameLoc")
                        .HasMaxLength(500);

                    b.Property<string>("createdBy")
                        .HasMaxLength(30);

                    b.Property<DateTime>("createdDt");

                    b.Property<string>("email")
                        .HasMaxLength(500);

                    b.Property<string>("fax")
                        .HasMaxLength(20);

                    b.Property<string>("homePage")
                        .HasMaxLength(1000);

                    b.Property<string>("lastUpdatedBy")
                        .HasMaxLength(30);

                    b.Property<DateTime>("lastUpdatedDt");

                    b.Property<string>("latitude")
                        .HasMaxLength(10);

                    b.Property<string>("longtitude")
                        .HasMaxLength(10);

                    b.Property<string>("mobile")
                        .HasMaxLength(20);

                    b.Property<string>("phone")
                        .HasMaxLength(20);

                    b.Property<string>("postalCode")
                        .HasMaxLength(10);

                    b.HasKey("companyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.Shared.Country", b =>
                {
                    b.Property<string>("countryCode")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3);

                    b.Property<string>("countryName")
                        .HasMaxLength(3);

                    b.Property<string>("createdBy")
                        .HasMaxLength(30);

                    b.Property<DateTime>("createdDt");

                    b.Property<string>("currencySymbol")
                        .HasMaxLength(3);

                    b.Property<string>("dateFormat")
                        .HasMaxLength(20);

                    b.Property<int>("formatDisplayDecimalPlace");

                    b.Property<string>("lastUpdatedBy")
                        .HasMaxLength(30);

                    b.Property<DateTime>("lastUpdatedDt");

                    b.Property<string>("roundingMethodForCalculation")
                        .HasMaxLength(20);

                    b.Property<int>("timeZone");

                    b.HasKey("countryCode");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.Shared.CountryGlobalSetting", b =>
                {
                    b.Property<string>("id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("companyId");

                    b.Property<string>("countryCode");

                    b.Property<string>("createdBy")
                        .HasMaxLength(30);

                    b.Property<DateTime>("createdDt");

                    b.Property<string>("lastUpdatedBy")
                        .HasMaxLength(30);

                    b.Property<DateTime>("lastUpdatedDt");

                    b.Property<string>("maintenanceMessage");

                    b.Property<bool>("maintenanceMode");

                    b.HasKey("id");

                    b.HasIndex("companyId");

                    b.HasIndex("countryCode");

                    b.ToTable("CountryGlobalSettings");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.FC.CarModel", b =>
                {
                    b.HasOne("Apv.AV.Services.Data.Models.FC.CarModelClass", "carModelClass")
                        .WithMany()
                        .HasForeignKey("carModelClassid");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.FC.CarModelClassImage", b =>
                {
                    b.HasOne("Apv.AV.Services.Data.Models.FC.CarModelClass")
                        .WithMany("carModelClassImages")
                        .HasForeignKey("CarModelClassid");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.FC.CarModelFinancialProduct", b =>
                {
                    b.HasOne("Apv.AV.Services.Data.Models.FC.CarModel")
                        .WithMany("financialProducts")
                        .HasForeignKey("CarModelid");

                    b.HasOne("Apv.AV.Services.Data.Models.FC.FinancialProduct", "financialProduct")
                        .WithMany()
                        .HasForeignKey("financialProductid");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.FC.CarPrice", b =>
                {
                    b.HasOne("Apv.AV.Services.Data.Models.FC.CarModel")
                        .WithMany("carPrices")
                        .HasForeignKey("CarModelid");
                });

            modelBuilder.Entity("Apv.AV.Services.Data.Models.Shared.CountryGlobalSetting", b =>
                {
                    b.HasOne("Apv.AV.Services.Data.Models.Shared.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyId");

                    b.HasOne("Apv.AV.Services.Data.Models.Shared.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryCode");
                });
#pragma warning restore 612, 618
        }
    }
}
